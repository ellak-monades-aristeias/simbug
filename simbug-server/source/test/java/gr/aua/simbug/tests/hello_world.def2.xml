<?xml version="1.0" encoding="UTF-8"?>
<Definition xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../definition/definition.xsd">
  <Configuration>
  </Configuration>
  <PlayerChoiceVariables>
    <PlayerChoiceVariable>
      <Name>numberChoice</Name>
      <Type>Integer</Type>
    </PlayerChoiceVariable>
  </PlayerChoiceVariables>
  <PlayerStateVariables>
    <PlayerStateVariable>
      <Name>roundDistanceFromAverage</Name>
      <Type>Float</Type>
    </PlayerStateVariable>
    <PlayerStateVariable>
    	<Name>roundRank</Name>
    	<Type>Integer</Type>
		
    </PlayerStateVariable>
    <PlayerStateVariable>
      <Name>overallScore</Name>
      <Type>Integer</Type>
    </PlayerStateVariable>
  </PlayerStateVariables>
  <WorldStateVariables>
    <WorldStateVariable>
      <Name>averageAllPlayers</Name>
      <Type>Float</Type>
    </WorldStateVariable>
  </WorldStateVariables>
  <ExternalParameters>
  </ExternalParameters>
  <RandomNumberGenerators>
  </RandomNumberGenerators>
  <ChoicesToStateAlgorithm>
  	<![CDATA[
  		RESULTS = new Object();
		RESULTS['WorldStateVariables'] = new Object();
		RESULTS['PlayerStateVariables'] = new Object();
		RESULTS['PlayerStateVariables']['roundDistanceFromAverage'] = new Object();
		RESULTS['PlayerStateVariables']['roundRank'] = new Object();
		RESULTS['PlayerStateVariables']['overallScore'] = new Object();
  		
		sum=0;
		for (i = 0; i < INFO['num_players']; i++) {
			player_id = INFO['players'][i];
		    sum = sum + PLAYER_CHOICE_VARIABLES['numberChoice'][player_id];
		}	
		avg_all = sum/INFO['num_players'];
		RESULTS['WorldStateVariables']['averageAllPlayers'] = avg_all;
		
		distance = new Array(INFO['num_players']);
		for (i = 0; i < INFO['num_players']; i++) {
			player_id = INFO['players'][i];
			distance[i] = Math.abs(avg_all - PLAYER_CHOICE_VARIABLES['numberChoice'][player_id]);
			RESULTS['PlayerStateVariables']['roundDistanceFromAverage'][player_id] = distance[i];
		}	 
		
		rank = new Array(INFO['num_players']);
		for (i = 0; i < INFO['num_players']; i++) {rank[i]=i;}
		
		rank.sort(function (a, b) { return distance[a] < distance[b] ? 1 : distance[a] > distance[b] ? -1 : 0; });
		for (i = 0; i < INFO['num_players']; i++) {
			player_id = INFO['players'][i];
			RESULTS['PlayerStateVariables']['roundRank'][player_id] = rank[i];
			if(INFO['cur_turn']>0) {
				RESULTS['PlayerStateVariables']['overallScore'][player_id] = rank[i] + PLAYER_STATE_VARIABLES['overallScore'][player_id][INFO['cur_turn']-1];
			}
			else {RESULTS['PlayerStateVariables']['overallScore'][player_id] = rank[i];}
		}		
				
	]]>
  
  </ChoicesToStateAlgorithm>
</Definition>
